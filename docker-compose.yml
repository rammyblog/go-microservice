version: '3'

services:
  broker-service:
    build:
      context: ./broker-service
      dockerfile: broker-service.Dockerfile
    restart: always
    ports:
      - '8080:80'
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./logger-service
      dockerfile: logger-service.Dockerfile
    restart: always
    ports:
      - '8082:80'
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - 'mongo'

  authentication-service:
    build:
      context: ./authentication-service
      dockerfile: authentication-service.Dockerfile
    restart: always
    ports:
      - '8081:80'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: 'host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=Africa/Lagos connect_timeout=5'
    depends_on: ['postgres']

  listener-service:
    build:
      context: ./listener-service
      dockerfile: listener-service.Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on: ['rabbitmq']

  mail-service:
    build:
      context: ./mail-service
      dockerfile: mail-service.Dockerfile
    restart: always
    ports:
      - '8083:80'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ''
      MAIL_PASSWORD: ''
      FROM_NAME: 'John Smith'
      FROM_ADDRESS: john.smith@example.com
    depends_on:
      - 'mailhog'

  postgres:
    image: 'postgres:14.2'
    ports:
      - '5432:5432'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.17-bionic'
    ports:
      - '27017:27017'
    #    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    platform: linux/amd64
    image: 'mailhog/mailhog:latest'
    ports:
      - '1025:1025'
      - '8025:8025'
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    platform: linux/amd64
    image: 'rabbitmq:3-management'
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq:/var/lib/rabbitmq/mnesia
